{"version":3,"sources":["components/Forecast/Forecast.js","components/Form/Form.js","components/HeaderContent/HeaderContent.js","components/Header/Header.js","components/Header/HeaderMobile.js","components/App.js","hooks.js","services/forecast.js","reportWebVitals.js","index.js"],"names":["Forecast","dates","weatherByDate","unit","map","date","i","dailyWeather","className","weather","displayTime","format","Date","dt_txt","iconUrl","icon","src","alt","description","main","temp","Form","onSubmit","selectedCity","handleChange","handleUnitChange","htmlFor","type","name","value","onChange","id","HeaderContent","city","forecast","showMetric","list","temp_min","temp_max","Header","HeaderMobile","App","useState","setForecast","setCity","setSelectedCity","setUnit","setDates","size","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","uniqueDates","Set","reading","debounce","_city","_unit","url","fetch","then","data","json","getForecast","items","catch","error","console","debounceFetch","e","target","preventDefault","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad7468f.chunk.js","sourcesContent":["import React from 'react';\nimport { format } from 'date-fns';\n\nfunction Forecast ({\n  dates,\n  weatherByDate,\n  unit\n}) {\n  return (\n    <>\n      {dates.map((date, i) => {\n        const dailyWeather = weatherByDate(date);\n        return (\n          <div key={date+i} className=\"weatherBox wrapper weatherBox__hourly flexColumn\">\n            <div className=\"weatherBox__date\">\n              <h3>{date}</h3>\n            </div>\n            <div className=\"weatherBox__items flexColumn\">\n              {dailyWeather.map((weather) => {\n                const displayTime = format(new Date(weather.dt_txt), 'h:mm a');\n                const iconUrl = `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`;\n                return (\n                  <div key={weather.dt_txt} className=\"weatherBox__items--hourly flexRow\">\n                      <p>{displayTime}</p>\n                    <div className=\"flexRow\">\n                      <img src={iconUrl} alt={weather.weather[0].description}/>\n                      <p>{weather.main.temp} {unit === \"metric\" ? \"°C\" : \"℉\"}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )\n      })}\n    </>\n  )\n}\nexport default Forecast;","import React from 'react';\n\nfunction Form ({\n  onSubmit, \n  selectedCity, \n  handleChange,\n  handleUnitChange,\n  unit\n}){\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"formContainer\">\n        {/* --- city input begins --- */}\n        <div className=\"input_container flexRow\">\n          <label htmlFor=\"cityName\">City:</label>\n          <input type=\"text\" name=\"cityName\" value={selectedCity} onChange={handleChange} />\n        </div>\n        {/* --- city input ends --- */}\n        {/* --- unit dropdown begins */}\n        <div className=\"input_container flexRow\">\n          <label htmlFor=\"unit\">Metric:</label>\n          <select name=\"unit\" id=\"unit\" onChange={handleUnitChange} value={unit}>\n            <option value=\"metric\">Celsius</option>\n            <option value=\"imperial\">Fahrenheit</option>\n          </select>\n        </div>\n        {/* --- unit dropdown ends */}\n      </div>\n      <input type=\"submit\" value={`Check ${selectedCity}'s 5 day forecast`}/>\n    </form>\n  )\n}\n\nexport default Form;","import React from 'react';\nimport { format } from 'date-fns';\n\nfunction HeaderContent ({\n  city,\n  forecast,\n  showMetric,\n}) {\n  return (\n    <>\n      <p>Today's weather in</p>\n      <h1>{city}</h1>\n      <p>is</p>\n      {forecast.list && (\n        <div>\n          <h2>{forecast.list[0].main.temp} {showMetric}</h2>\n          <p>{`Low ${forecast.list[0].main.temp_min} ${showMetric}/ High ${forecast.list[0].main.temp_max} ${showMetric}`}</p>\n        </div>\n      )}\n      <p> at {format(new Date(), 'h:mm a')}</p>\n    </>\n  )\n}\n\nexport default HeaderContent;","import React from 'react';\nimport Form from '../Form/Form';\nimport HeaderContent from '../HeaderContent/HeaderContent';\n\nfunction Header({\n  city,\n  forecast,\n  showMetric,\n  onSubmit,\n  selectedCity,\n  handleChange,\n  handleUnitChange,\n  unit\n}){\n  return(\n    <header className=\"App-header\">\n      <div className=\"fixed\">\n        <HeaderContent city={city} forecast={forecast} showMetric={showMetric} />\n        {/* --- form begins --- */}\n        <Form \n          onSubmit={onSubmit}\n          selectedCity={selectedCity}\n          handleChange={handleChange}\n          handleUnitChange={handleUnitChange}\n          unit={unit}\n        />\n        {/* --- form ends --- */}\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Form from '../Form/Form';\nimport HeaderContent from '../HeaderContent/HeaderContent';\n\nfunction HeaderMobile({\n  city,\n  forecast,\n  showMetric,\n  onSubmit,\n  selectedCity,\n  handleChange,\n  handleUnitChange,\n  unit\n}){\n  return(\n    <header className=\"App-header--responsive\">\n      <div className=\"fixed--responsive\">\n        <HeaderContent city={city} forecast={forecast} showMetric={showMetric} />\n        {/* --- form begins --- */}\n        <Form \n          onSubmit={onSubmit}\n          selectedCity={selectedCity}\n          handleChange={handleChange}\n          handleUnitChange={handleUnitChange}\n          unit={unit}\n        />\n        {/* --- form ends --- */}\n      </div>\n    </header>\n  )\n}\n\nexport default HeaderMobile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { format } from 'date-fns';\nimport { debounce } from 'throttle-debounce';\nimport { getForecast } from '../services/forecast';\nimport Forecast from './Forecast/Forecast';\nimport Header from './Header/Header';\nimport { useWindowSize } from '../hooks';\nimport HeaderMobile from './Header/HeaderMobile';\n\nfunction App() {\n  // --- HOOKS BEGIN ---\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState(\"Vancouver\");\n  const [selectedCity, setSelectedCity] = useState(city);\n  const [unit, setUnit] = useState(\"metric\")\n  const [dates, setDates] = useState([]);\n  const size = useWindowSize();\n  useEffect(\n    () => {\n      const uniqueDates = [...new Set(forecast.list?.map((reading) => format(new Date(reading.dt_txt), 'MMM dd yyyy')))];\n      const debounceFetch = debounce(3000, () => {\n        getForecast(city, unit)\n          .then(items => {\n              setForecast(items)\n          })\n          .then(() => setDates(uniqueDates))\n          .catch((error) => console.error(error))\n      })\n      debounceFetch()\n\n    },\n    [city, forecast.list, unit]\n  )\n  // --- HOOKS END ---  \n  // --- event handling begins ---\n  const handleChange = (e) => {\n    if (e.target.value === undefined) return \"\";\n    setSelectedCity(e.target.value)\n  }\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value);\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setCity(e.target[0].value);\n    setUnit(e.target[1].value);\n  }\n  // --- event handling ends ---\n  // --- constants begins ---\n  const weatherByDate = (date) => { // create array of forecast readings by singular date\n    const arr = forecast.list.filter((weather) => date === format(new Date(weather.dt_txt), \"MMM dd yyyy\"))\n    return arr;\n  }\n  const showMetric = unit === \"metric\" ? \"°C\" : \"℉\";\n  // --- constants ends ---\n\n  return (\n    <div className=\"App\">\n      <div className=\"container wrapper\">\n        {/* --- Header begins --- */}\n        { // responsive ternary to show mobile vs desktop layout\n          size.width <=950 ? (\n            <div className=\"wrapper\">\n              <HeaderMobile \n                city={city}\n                forecast={forecast}\n                showMetric={showMetric}\n                onSubmit={onSubmit}\n                selectedCity={selectedCity}\n                handleChange={handleChange}\n                handleUnitChange={handleUnitChange}\n                unit={unit}\n              /> \n            </div>\n          ) : (\n            <Header \n              city={city}\n              forecast={forecast}\n              showMetric={showMetric}\n              onSubmit={onSubmit}\n              selectedCity={selectedCity}\n              handleChange={handleChange}\n              handleUnitChange={handleUnitChange}\n              unit={unit}\n            />\n          )\n        }  \n        {/* --- Header ends --- */}\n        {/* --- Main section begins */}\n        <section className=\"main\">\n          {/* --- Forecast begins --- */}\n          <section className=\"main__container\">\n            <Forecast dates={dates} weatherByDate={weatherByDate} unit={unit} />   \n          </section>\n          {/* --- Forecast ends --- */}\n        </section>\n        {/* --- Main Section Ends --- */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","export function getForecast(_city, _unit) {\n  // const api_key = process.env.REACT_APP_OPENWEATHER_API_KEY;\n  // const api_key = \"f2d256778f4c877271b311c22dd7e42f\";\n  const api_key = \"c31c30767b7de2bc0ea9165e36e77213\";\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${_city}&units=${_unit}&appid=${api_key}`;\n  return fetch(url)\n    .then(data => data.json())\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}